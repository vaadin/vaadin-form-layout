{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`<vaadin-form-layout>` is a Polymer element providing configurable responsive layout for form elements.\n\n```html\n<vaadin-form-layout>\n  <vaadin-text-field label=\"First Name\" value=\"Jane\"></vaadin-text-field>\n  <vaadin-text-field label=\"Last Name\" value=\"Doe\"></vaadin-text-field>\n  <vaadin-text-field label=\"Email\" value=\"jane.doe@example.com\"></vaadin-text-field>\n</vaadin-form-layout>\n```\n\nIt supports any child elements as layout items.\n\nBy default, it makes a layout of two columns if the element width is equal or\nwider than 40em, and a single column layout otherwise.\n\nThe number of columns and the responsive behavior are customizable with\nthe `columns` property.\n\n### Spanning Items on Multiple Columns\n\nYou can use `colspan` attribute on the items.\nIn the example below, the first text field spans on two columns:\n\n<vaadin-form-layout>\n  <vaadin-text-field colspan=\"2\" label=\"Address\"></vaadin-text-field>\n  <vaadin-text-field label=\"First Name\" value=\"Jane\"></vaadin-text-field>\n  <vaadin-text-field label=\"Last Name\" value=\"Doe\"></vaadin-text-field>\n</vaadin-form-layout>\n\n### Explicit New Row\n\nUse the `<br>` line break element to wrap the items on a new row:\n\n```html\n<vaadin-form-layout>\n  <vaadin-text-field label=\"Email\"></vaadin-text-field>\n  <br>\n  <vaadin-text-field label=\"Confirm Email\"></vaadin-text-field>\n</vaadin-form-layout>\n```\n\n### CSS Properties Reference\n\nThe following custom CSS properties are available on the `<vaadin-form-layout>`\nelement:\n\nCustom CSS property | Description | Default\n---|---|---\n`--vaadin-form-layout-column-gap` | Length of the gap between columns | `2em`",
      "summary": "",
      "path": "vaadin-form-layout.html",
      "attributes": [
        {
          "name": "columns",
          "description": "Number of columns in the layout. Allows specifying a responsive\nbehavior with the number of columns depending on the layout width.\n\nThe value is a comma-separated list of one or more responsive\nsteps, each responsive step is a space-separated list of the column\ncount and the corresponding min-width threshold.\n\nThe min-width thresholds are CSS length values specifying the\nminimum width of the layout for each responsive step.\n\nFormal syntax:\n    <responsive-step> [ , <responsive-step> ]*\nwhere\n    <responsive-step> = <column-count> [ <min-width> ]?\n\n<column-count> = <integer>\n    Number of columns, assumed as 1 if zero or negative.\n<min-width> = <length>\n    Minimum width of the layout corresponding to this step.\n    Optional, assumed as 0 if omitted.\n\nExamples:\n\n`1`\n    The layout is always a single column.\n`1, 2 40em`\n    The layout is two-column when the layout width is >= 40em, and\n    single-column otherwise.",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 165,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        }
      ],
      "properties": [
        {
          "name": "columns",
          "type": "string",
          "description": "Number of columns in the layout. Allows specifying a responsive\nbehavior with the number of columns depending on the layout width.\n\nThe value is a comma-separated list of one or more responsive\nsteps, each responsive step is a space-separated list of the column\ncount and the corresponding min-width threshold.\n\nThe min-width thresholds are CSS length values specifying the\nminimum width of the layout for each responsive step.\n\nFormal syntax:\n    <responsive-step> [ , <responsive-step> ]*\nwhere\n    <responsive-step> = <column-count> [ <min-width> ]?\n\n<column-count> = <integer>\n    Number of columns, assumed as 1 if zero or negative.\n<min-width> = <length>\n    Minimum width of the layout corresponding to this step.\n    Optional, assumed as 0 if omitted.\n\nExamples:\n\n`1`\n    The layout is always a single column.\n`1, 2 40em`\n    The layout is two-column when the layout width is >= 40em, and\n    single-column otherwise.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 161,
              "column": 10
            },
            "end": {
              "line": 165,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_columnsChanged\""
            }
          },
          "defaultValue": "\"1, 2 40em\""
        },
        {
          "name": "_parsedResponsiveSteps",
          "type": "Array",
          "description": "Parsed value of the columns property",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 10
            },
            "end": {
              "line": 170,
              "column": 39
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_columnCount",
          "type": "number",
          "description": "Current number of columns in the layout",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 10
            },
            "end": {
              "line": 178,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_columnCountChanged\""
            }
          }
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 193,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_naturalNumberOrOne",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "n"
            }
          ]
        },
        {
          "name": "_parseResponsiveSteps",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 6
            },
            "end": {
              "line": 208,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns"
            }
          ]
        },
        {
          "name": "_columnsChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 6
            },
            "end": {
              "line": 213,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "columns"
            }
          ]
        },
        {
          "name": "_selectResponsiveStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 237,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_columnCountChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 6
            },
            "end": {
              "line": 241,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "updateStyles",
          "description": "Update the item widths, column gaps and other styles.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 274,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "...args"
            }
          ]
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "demos": [],
      "slots": [
        {
          "description": "",
          "name": "",
          "range": {
            "file": "vaadin-form-layout.html",
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 29
            }
          }
        }
      ],
      "events": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 118,
          "column": 4
        },
        "end": {
          "line": 275,
          "column": 5
        }
      },
      "privacy": "public",
      "tagname": "vaadin-form-layout",
      "classname": "VaadinFormLayoutElement",
      "mixins": [
        "Vaadin.ThemableMixin"
      ],
      "superclass": "HTMLElement"
    }
  ]
}
