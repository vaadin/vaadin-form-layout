{
  "schema_version": "1.0.0",
  "namespaces": [
    {
      "name": "Vaadin",
      "description": "",
      "summary": "",
      "sourceRange": {
        "file": "vaadin-form-layout.html",
        "start": {
          "line": 430,
          "column": 6
        },
        "end": {
          "line": 430,
          "column": 42
        }
      },
      "elements": [
        {
          "description": "`<vaadin-form-layout>` is a Polymer element providing configurable responsive\nlayout for form elements.\n\n```html\n<vaadin-form-layout>\n\n  <vaadin-form-item>\n    <label slot=\"label\">First Name</label>\n    <input class=\"full-width\" value=\"Jane\">\n  </vaadin-form-item>\n\n  <vaadin-form-item>\n    <label slot=\"label\">Last Name</label>\n    <input class=\"full-width\" value=\"Doe\">\n  </vaadin-form-item>\n\n  <vaadin-form-item>\n    <label slot=\"label\">Email</label>\n    <input class=\"full-width\" value=\"jane.doe@example.com\">\n  </vaadin-form-item>\n\n</vaadin-form-layout>\n```\n\nIt supports any child elements as layout items.\n\nBy default, it makes a layout of two columns if the element width is equal or\nwider than 40em, and a single column layout otherwise.\n\nThe number of columns and the responsive behavior are customizable with\nthe `columns` property.\n\n### Spanning Items on Multiple Columns\n\nYou can use `colspan` attribute on the items.\nIn the example below, the first text field spans on two columns:\n\n```html\n<vaadin-form-layout>\n\n  <vaadin-form-item colspan=\"2\">\n    <label slot=\"label\">Address</label>\n    <input class=\"full-width\">\n  </vaadin-form-item>\n\n  <vaadin-form-item>\n    <label slot=\"label\">First Name</label>\n    <input class=\"full-width\" value=\"Jane\">\n  </vaadin-form-item>\n\n  <vaadin-form-item>\n    <label slot=\"label\">Last Name</label>\n    <input class=\"full-width\" value=\"Doe\">\n  </vaadin-form-item>\n\n</vaadin-form-layout>\n```\n\n### Explicit New Row\n\nUse the `<br>` line break element to wrap the items on a new row:\n\n```html\n<vaadin-form-layout>\n\n  <vaadin-form-item>\n    <label slot=\"label\">Email</label>\n    <input class=\"full-width\">\n  </vaadin-form-item>\n\n  <br>\n\n  <vaadin-form-item>\n    <label slot=\"label\">Confirm Email</label>\n    <input class=\"full-width\">\n  </vaadin-form-item>\n\n</vaadin-form-layout>\n```\n\n### CSS Properties Reference\n\nThe following custom CSS properties are available on the `<vaadin-form-layout>`\nelement:\n\nCustom CSS property | Description | Default\n---|---|---\n`--vaadin-form-layout-column-gap` | Length of the gap between columns | `2em`\n\nAdditionaly, the following custom CSS properties are available on the\n`<vaadin-form-item>` element:\n\nCustom CSS property | Description | Default\n---|---|---\n`--vaadin-form-item-label-width` | Width of the label column when the labels are aside | `8em`\n`--vaadin-form-item-label-gap` | Length of the gap between the label column and the input column when the labels are aside | `1em`",
          "summary": "",
          "path": "vaadin-form-layout.html",
          "attributes": [
            {
              "name": "columns",
              "description": "Number of columns in the layout. Allows specifying a responsive\nbehavior with the number of columns and the label position\ndepending on the layout width.\n\nThe value is a comma-separated list of one or more responsive\nsteps, each responsive step is a space-separated list of the\noptional min-width threshold, the column count, and the optional\n`labels-on-top` flag.\n\nThe min-width thresholds are CSS length values specifying the\nminimum width of the layout for each responsive step.\n\n#### Formal syntax\n\n    <responsive-step> [ , <responsive-step> ]*\n\n    <responsive-step> =\n        [ <min-width> ]? <column-count> [ labels-on-top ]?\n\nwhere:\n\n<dl>\n  <dt>`<min-width> = <length>`</dt>\n  <dd>\n    Minimum width of the layout corresponding to this step.\n    Optional, assumed as 0 if omitted.\n  </dd>\n\n  <dt>`<column-count> = <integer>`</dt>\n  <dd>\n    Number of columns, assumed as 1 if zero or negative.\n  </dd>\n\n  <dt>`labels-on-top`</dt>\n  <dd>\n    Optional, move the labels in the child `<vaadin-form-item>`\n    elements on top of the input fields. Labels are aside the\n    input fields if omitted.\n  </dd>\n</dl>\n\n#### Examples\n\n<dl>\n  <dt>`1`</dt>\n  <dd>\n    <p>The layout is always a single column, labels aside.\n  </dd>\n\n  <dt>`1, 40em 2`</dt>\n  <dd>\n    <p>Sets two responsive steps:\n    <ol>\n      <li>When the layout width is < 40em, one column, labels aside.\n      <li>Width >= 40em, two columns, labels aside.\n    </ol>\n  </dd>\n\n  <dt>`1 labels-on-top, 20em 1, 40em 2`</dt>\n  <dd>\n    <p>Default value. Three responsive steps:\n    <ol>\n      <li>Width < 20em, one column, labels on top.\n      <li>20em <= width < 40em, one column, labels aside.\n      <li>Width >= 40em, two columns, labels aside.\n    </ol>\n  </dd>\n</dl>",
              "sourceRange": {
                "start": {
                  "line": 250,
                  "column": 12
                },
                "end": {
                  "line": 254,
                  "column": 13
                }
              },
              "metadata": {},
              "type": "string"
            }
          ],
          "properties": [
            {
              "name": "columns",
              "type": "string",
              "description": "Number of columns in the layout. Allows specifying a responsive\nbehavior with the number of columns and the label position\ndepending on the layout width.\n\nThe value is a comma-separated list of one or more responsive\nsteps, each responsive step is a space-separated list of the\noptional min-width threshold, the column count, and the optional\n`labels-on-top` flag.\n\nThe min-width thresholds are CSS length values specifying the\nminimum width of the layout for each responsive step.\n\n#### Formal syntax\n\n    <responsive-step> [ , <responsive-step> ]*\n\n    <responsive-step> =\n        [ <min-width> ]? <column-count> [ labels-on-top ]?\n\nwhere:\n\n<dl>\n  <dt>`<min-width> = <length>`</dt>\n  <dd>\n    Minimum width of the layout corresponding to this step.\n    Optional, assumed as 0 if omitted.\n  </dd>\n\n  <dt>`<column-count> = <integer>`</dt>\n  <dd>\n    Number of columns, assumed as 1 if zero or negative.\n  </dd>\n\n  <dt>`labels-on-top`</dt>\n  <dd>\n    Optional, move the labels in the child `<vaadin-form-item>`\n    elements on top of the input fields. Labels are aside the\n    input fields if omitted.\n  </dd>\n</dl>\n\n#### Examples\n\n<dl>\n  <dt>`1`</dt>\n  <dd>\n    <p>The layout is always a single column, labels aside.\n  </dd>\n\n  <dt>`1, 40em 2`</dt>\n  <dd>\n    <p>Sets two responsive steps:\n    <ol>\n      <li>When the layout width is < 40em, one column, labels aside.\n      <li>Width >= 40em, two columns, labels aside.\n    </ol>\n  </dd>\n\n  <dt>`1 labels-on-top, 20em 1, 40em 2`</dt>\n  <dd>\n    <p>Default value. Three responsive steps:\n    <ol>\n      <li>Width < 20em, one column, labels on top.\n      <li>20em <= width < 40em, one column, labels aside.\n      <li>Width >= 40em, two columns, labels aside.\n    </ol>\n  </dd>\n</dl>",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 250,
                  "column": 12
                },
                "end": {
                  "line": 254,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {
                  "observer": "\"_columnsChanged\""
                }
              },
              "defaultValue": "\"1 labels-on-top, 20em 1, 40em 2\""
            },
            {
              "name": "_parsedResponsiveSteps",
              "type": "Array",
              "description": "Parsed value of the columns property",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 259,
                  "column": 12
                },
                "end": {
                  "line": 259,
                  "column": 41
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_columnCount",
              "type": "number",
              "description": "Current number of columns in the layout",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 264,
                  "column": 12
                },
                "end": {
                  "line": 266,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            },
            {
              "name": "_labelsOnTop",
              "type": "boolean",
              "description": "Indicates that labels are on top",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 271,
                  "column": 12
                },
                "end": {
                  "line": 273,
                  "column": 13
                }
              },
              "metadata": {
                "polymer": {}
              }
            }
          ],
          "methods": [
            {
              "name": "ready",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 283,
                  "column": 8
                },
                "end": {
                  "line": 303,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "connectedCallback",
              "description": "",
              "privacy": "private",
              "sourceRange": {
                "start": {
                  "line": 305,
                  "column": 8
                },
                "end": {
                  "line": 310,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_naturalNumberOrOne",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 312,
                  "column": 8
                },
                "end": {
                  "line": 315,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "n"
                }
              ]
            },
            {
              "name": "_isValidCSSLength",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 317,
                  "column": 8
                },
                "end": {
                  "line": 333,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "value"
                }
              ]
            },
            {
              "name": "_parseResponsiveSteps",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 335,
                  "column": 8
                },
                "end": {
                  "line": 347,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "columns"
                }
              ]
            },
            {
              "name": "_columnsChanged",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 349,
                  "column": 8
                },
                "end": {
                  "line": 352,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "columns"
                }
              ]
            },
            {
              "name": "_selectResponsiveStep",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 354,
                  "column": 8
                },
                "end": {
                  "line": 377,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "_invokeUpdateStyles",
              "description": "",
              "privacy": "protected",
              "sourceRange": {
                "start": {
                  "line": 379,
                  "column": 8
                },
                "end": {
                  "line": 381,
                  "column": 9
                }
              },
              "metadata": {},
              "params": []
            },
            {
              "name": "updateStyles",
              "description": "Set custom CSS property values and update the layout.",
              "privacy": "public",
              "sourceRange": {
                "start": {
                  "line": 386,
                  "column": 8
                },
                "end": {
                  "line": 422,
                  "column": 9
                }
              },
              "metadata": {},
              "params": [
                {
                  "name": "...args"
                }
              ]
            }
          ],
          "styling": {
            "cssVariables": [],
            "selectors": []
          },
          "demos": [],
          "slots": [
            {
              "description": "",
              "name": "",
              "range": {
                "file": "vaadin-form-layout.html",
                "start": {
                  "line": 59,
                  "column": 6
                },
                "end": {
                  "line": 59,
                  "column": 29
                }
              }
            }
          ],
          "events": [],
          "metadata": {},
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 423,
              "column": 7
            }
          },
          "privacy": "public",
          "tagname": "vaadin-form-layout",
          "classname": "Vaadin.FormLayoutElement",
          "mixins": [
            "Vaadin.ThemableMixin"
          ],
          "superclass": "HTMLElement"
        }
      ]
    }
  ],
  "elements": [
    {
      "description": "`<vaadin-form-item>` is a Polymer element providing labelled form item wrapper\nfor using inside `<vaadin-form-layout>`.\n\n`<vaadin-form-item>` accepts any number of children as the input content,\nand also has a separate named `label` slot:\n\n```html\n<vaadin-form-item>\n  <label slot=\"label\">Label aside</label>\n  <input>\n</vaadin-form-item>\n```\n\nBy default, the `label` slot content is displayed aside of the input content.\nWhen `label-on-top` attribute is set, the `label` slot content\nis displayed on top:\n\n```html\n<vaadin-form-item label-on-top>\n  <label slot=\"label\">Label on top</label>\n  <input>\n</vaadin-form-item>\n```\n\nWhen used as a child of a `<vaadin-form-layout>`, the `label-on-top` attribute\nis tiggered automatically by the parent `<vaadin-form-layout>`, depending on\nits width and responsive behavior.\n\n### Inputs Width\n\nBy default, `<vaadin-form-item>` does not manipulate the width of the slotted\ninput elements. Optionally you can stretch the child input element to fill\nthe avaiable width for the input content by applying the `full-width` classname:\n\n```html\n<vaadin-form-item>\n  <label slot=\"label\">Label</label>\n  <input class=\"full-width\">\n</vaadin-form-item>\n```\n\n### Custom CSS Properties Reference\n\nThe following custom CSS properties are available on the `<vaadin-form-item>`\nelement:\n\nCustom CSS property | Description | Default\n---|---|---\n`--vaadin-form-item-label-width` | Width of the label column when the labels are aside | `8em`\n`--vaadin-form-item-label-gap` | Length of the gap between the label column and the input column when the labels are aside | `1em`\n\n@element vaadin-form-item\n@mixes Vaadin.ThemableMixin\n@demo demo/index.html",
      "summary": "",
      "path": "vaadin-form-item.html",
      "attributes": [],
      "properties": [],
      "methods": [
        {
          "name": "_onLabelClick",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 8
            },
            "end": {
              "line": 136,
              "column": 9
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "demos": [],
      "slots": [
        {
          "description": "",
          "name": "label",
          "range": {
            "file": "vaadin-form-item.html",
            "start": {
              "line": 109,
              "column": 6
            },
            "end": {
              "line": 109,
              "column": 32
            }
          }
        },
        {
          "description": "",
          "name": "",
          "range": {
            "file": "vaadin-form-item.html",
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 113,
              "column": 36
            }
          }
        }
      ],
      "events": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 119,
          "column": 6
        },
        "end": {
          "line": 137,
          "column": 7
        }
      },
      "privacy": "public",
      "tagname": "vaadin-form-item",
      "classname": "FormItemElement",
      "superclass": "HTMLElement"
    }
  ]
}
